server.port=8081
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
#
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
#
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.show-sql=true
#
server.error.include-message=always

#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.add.type.headers=false

#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.ewecarreiras.shopapi.dto.ShopDto
##spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.entity.Foo


#spring.kafka.consumer.bootstrap-servers=localhost:9092
#
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.group-id=consumer-group-1
#spring.kafka.consumer.properties.spring.json.value.default.type=com.kafka.consumer.Message
#spring.kafka.consumer.properties.spring.json.type.mapping=com.kafka.producer.Message:com.kafka.consumer.Message
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.kafka.producer





